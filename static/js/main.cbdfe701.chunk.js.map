{"version":3,"sources":["Components/PeoplePicker.js","Components/ckeditor.js","App.js","serviceWorker.js","index.js"],"names":["PeoplePicker","props","peoplePickerElementId","AllowMultipleValues","PeopleorGroup","GroupID","schema","window","SPClientPeoplePicker_InitStandaloneControlWrapper","initializePeoplePicker","Row","className","Form","form","Col","md","id","onClick","this","saveinfo","to","item","__metadata","type","Title","console","log","JSON","stringify","$","ajax","url","contentType","data","headers","Accept","val","success","error","Component","editorConfiguration","plugins","Essentials","Bold","Italic","BlockQuote","CKFinder","EasyImage","Heading","Image","ImageCaption","ImageStyle","ImageToolbar","ImageUpload","Indent","Link","List","MediaEmbed","Paragraph","PasteFromOffice","Table","TableToolbar","TextTransformation","RealTimeCollaborativeEditing","RealTimeCollaborativeComments","RealTimeCollaborativeTrackChanges","PresenceList","toolbar","cloudServices","tokenUrl","uploadUrl","webSocketUrl","collaboration","channelId","sidebar","container","document","querySelector","presenceList","App","editor","ClassicEditor","config","onInit","onChange","event","getData","onBlur","onFocus","path","exact","component","ckeditor","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cbdfe701.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nfunction initializePeoplePicker(\r\n  peoplePickerElementId,\r\n  AllowMultipleValues,\r\n  PeopleorGroup,\r\n  GroupID\r\n) {\r\n  // Create a schema to store picker properties, and set the properties.\r\n  var schema = {};\r\n  schema[\"SearchPrincipalSource\"] = 15;\r\n  schema[\"ResolvePrincipalSource\"] = 15;\r\n  schema[\"MaximumEntitySuggestions\"] = 50;\r\n  schema[\"Width\"] = \"280px\";\r\n  schema[\"AllowMultipleValues\"] = AllowMultipleValues;\r\n  if (PeopleorGroup === \"PeopleOnly\") schema[\"PrincipalAccountType\"] = \"User\";\r\n  else schema[\"PrincipalAccountType\"] = \"User,DL,SecGroup,SPGroup\";\r\n  if (GroupID > 0) {\r\n    schema[\"SharePointGroupID\"] = GroupID;\r\n  }\r\n  // Render and initialize the picker.\r\n  // Pass the ID of the DOM element that contains the picker, an array of initial\r\n  // PickerEntity objects to set the picker value, and a schema that defines\r\n  // picker properties.\r\n  //console.log(this)\r\n  window.SPClientPeoplePicker_InitStandaloneControlWrapper(\r\n    peoplePickerElementId,\r\n    null,\r\n    schema\r\n  );\r\n}\r\n\r\nexport class PeoplePicker extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  componentDidMount() {\r\n    initializePeoplePicker(\"peoplepicker\", true, \"People Only\", 44);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"container emp-container\">\r\n        <Form>\r\n          <Row form>\r\n            <Col md={9}>\r\n              <div id=\"peoplepicker\"></div>\r\n            </Col>\r\n            <Col md={3}>\r\n              <NavLink\r\n                className=\"btn btn-primary\"\r\n                onClick={this.saveinfo}\r\n                to=\"/ckeditor\"\r\n              >\r\n                Submit\r\n              </NavLink>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Row>\r\n    );\r\n  }\r\n  saveinfo() {\r\n    var item = {\r\n      __metadata: { type: \"SP.Data.CkeditorListItem\" },\r\n      Title: \"updated title\",\r\n    };\r\n    console.log(JSON.stringify(item));\r\n\r\n    $.ajax({\r\n      url:\r\n        \"https://resembleae.sharepoint.com/sites/DMSDemo/_api/web/lists/GetByTitle('ckeditor')/items\",\r\n      type: \"POST\",\r\n      contentType: \"application/json;odata=verbose\",\r\n      data: JSON.stringify(item),\r\n      headers: {\r\n        Accept: \"application/json;odata=verbose\",\r\n        \"X-RequestDigest\": $(\"#__REQUESTDIGEST\").val(),\r\n      },\r\n      success: function (data) {},\r\n      error: function (data) {\r\n        console.log(data);\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default PeoplePicker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\n\r\n// NOTE: Use the editor from source (not a build)!\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\r\n\r\nimport Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\r\n//import UploadAdapter from \"@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter\";\r\n//import Autoformat from \"@ckeditor/ckeditor5-autoformat/src/autoformat\";\r\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\r\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\r\nimport BlockQuote from \"@ckeditor/ckeditor5-block-quote/src/blockquote\";\r\nimport CKFinder from \"@ckeditor/ckeditor5-ckfinder/src/ckfinder\";\r\nimport EasyImage from \"@ckeditor/ckeditor5-easy-image/src/easyimage\";\r\nimport Heading from \"@ckeditor/ckeditor5-heading/src/heading\";\r\nimport Image from \"@ckeditor/ckeditor5-image/src/image\";\r\nimport ImageCaption from \"@ckeditor/ckeditor5-image/src/imagecaption\";\r\nimport ImageStyle from \"@ckeditor/ckeditor5-image/src/imagestyle\";\r\nimport ImageToolbar from \"@ckeditor/ckeditor5-image/src/imagetoolbar\";\r\nimport ImageUpload from \"@ckeditor/ckeditor5-image/src/imageupload\";\r\nimport Indent from \"@ckeditor/ckeditor5-indent/src/indent\";\r\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\r\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\r\nimport MediaEmbed from \"@ckeditor/ckeditor5-media-embed/src/mediaembed\";\r\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\r\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\r\nimport Table from \"@ckeditor/ckeditor5-table/src/table\";\r\nimport TableToolbar from \"@ckeditor/ckeditor5-table/src/tabletoolbar\";\r\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\r\nimport RealTimeCollaborativeEditing from \"@ckeditor/ckeditor5-real-time-collaboration/src/realtimecollaborativeediting\";\r\nimport RealTimeCollaborativeComments from \"@ckeditor/ckeditor5-real-time-collaboration/src/realtimecollaborativecomments\";\r\nimport PresenceList from \"@ckeditor/ckeditor5-real-time-collaboration/src/presencelist\";\r\nimport RealTimeCollaborativeTrackChanges from \"@ckeditor/ckeditor5-real-time-collaboration/src/realtimecollaborativetrackchanges\";\r\nconst editorConfiguration = {\r\n  plugins: [\r\n    Essentials,\r\n    // UploadAdapter,\r\n    // Autoformat,\r\n    Bold,\r\n    Italic,\r\n    BlockQuote,\r\n    CKFinder,\r\n    EasyImage,\r\n    Heading,\r\n    Image,\r\n    ImageCaption,\r\n    ImageStyle,\r\n    ImageToolbar,\r\n    ImageUpload,\r\n    Indent,\r\n    Link,\r\n    List,\r\n    MediaEmbed,\r\n    Paragraph,\r\n    PasteFromOffice,\r\n    Table,\r\n    TableToolbar,\r\n    TextTransformation,\r\n    RealTimeCollaborativeEditing,\r\n    RealTimeCollaborativeComments,\r\n    RealTimeCollaborativeTrackChanges,\r\n    PresenceList,\r\n  ],\r\n  toolbar: [\r\n    \"heading\",\r\n    \"|\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"link\",\r\n    \"bulletedList\",\r\n    \"numberedList\",\r\n    \"|\",\r\n    \"indent\",\r\n    \"outdent\",\r\n    \"|\",\r\n    \"imageUpload\",\r\n    \"blockQuote\",\r\n    \"insertTable\",\r\n    \"mediaEmbed\",\r\n    \"undo\",\r\n    \"redo\",\r\n    \"|\",\r\n    \"comment\",\r\n    \"trackChanges\",\r\n  ],\r\n  cloudServices: {\r\n    // PROVIDE CORRECT VALUES HERE:\r\n    tokenUrl:\r\n      \"https://73641.cke-cs.com/token/dev/950193beddb6a3d006815f9c45535c90965ce0eca129090a423e0ad2a423?user.id=e1&user.name=fawaz&role=commentator&user.id=e2&user.name=shiva&role=writer\",\r\n    uploadUrl: \"https://73641.cke-cs.com/easyimage/upload/\",\r\n    webSocketUrl: \"wss://73641.cke-cs.com/ws\",\r\n  },\r\n  collaboration: {\r\n    channelId: \"document-id\",\r\n  },\r\n  sidebar: {\r\n    container: document.querySelector(\"#sidebar\"),\r\n  },\r\n  presenceList: {\r\n    container: document.querySelector(\"#presence-list-container\"),\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          config={editorConfiguration}\r\n          data=\"\"\r\n          onInit={(editor) => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n          }}\r\n          onBlur={(event, editor) => {\r\n            console.log(\"Blur.\", editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n            console.log(\"Focus.\", editor);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PeoplePicker from \"./Components/PeoplePicker\";\nimport ckeditor from \"./Components/ckeditor\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={PeoplePicker}></Route>\n          <Route path=\"/ckeditor\" component={ckeditor}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}